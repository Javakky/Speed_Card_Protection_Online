/*
 * This file is generated by jOOQ.
 */
package jooq.sys.routines;


import jooq.sys.Sys;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;

import javax.annotation.Generated;


/**
 * 
 *  Description
 *  
 *  Takes a raw bytes value, and converts it to a human readable format.
 *  
 *  Parameters
 *  
 *  bytes (TEXT):
 *  A raw bytes value.
 *  
 *  Returns
 *  
 *  TEXT
 *  
 *  Example
 *  
 *  mysql&gt; SELECT sys.format_bytes(2348723492723746) AS size;
 *  +----------+
 *  | size     |
 *  +----------+
 *  | 2.09 PiB |
 *  +----------+
 *  1 row in set (0.00 sec)
 *  
 *  mysql&gt; SELECT sys.format_bytes(2348723492723) AS size;
 *  +----------+
 *  | size     |
 *  +----------+
 *  | 2.14 TiB |
 *  +----------+
 *  1 row in set (0.00 sec)
 *  
 *  mysql&gt; SELECT sys.format_bytes(23487234) AS size;
 *  +-----------+
 *  | size      |
 *  +-----------+
 *  | 22.40 MiB |
 *  +-----------+
 *  1 row in set (0.00 sec)
 *  
 */
@Generated(
    value = {
        "http://www.jooq.org",
            "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FormatBytes extends AbstractRoutine<String> {

    /**
     * The parameter <code>sys.format_bytes.RETURN_VALUE</code>.
     */
    public static final Parameter<String> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.CLOB, false, false);
    /**
     * The parameter <code>sys.format_bytes.bytes</code>.
     */
    public static final Parameter<String> BYTES = Internal.createParameter("bytes", org.jooq.impl.SQLDataType.CLOB, false, false);
    private static final long serialVersionUID = -2091532616;

    /**
     * Create a new routine call instance
     */
    public FormatBytes() {
        super("format_bytes", Sys.SYS, org.jooq.impl.SQLDataType.CLOB);

        setReturnParameter(RETURN_VALUE);
        addInParameter(BYTES);
    }

    /**
     * Set the <code>bytes</code> parameter IN value to the routine
     */
    public void setBytes(String value) {
        setValue(BYTES, value);
    }

    /**
     * Set the <code>bytes</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setBytes(Field<String> field) {
        setField(BYTES, field);
    }
}
