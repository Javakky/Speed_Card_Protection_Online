/*
 * This file is generated by jOOQ.
 */
package jooq.sakila.tables;


import jooq.sakila.Sakila;
import jooq.sakila.enums.NicerButSlowerFilmListRating;
import jooq.sakila.tables.records.NicerButSlowerFilmListRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;

import javax.annotation.Generated;
import java.math.BigDecimal;


/**
 * VIEW
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.2"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class NicerButSlowerFilmList extends TableImpl<NicerButSlowerFilmListRecord> {

    /**
     * The reference instance of <code>sakila.nicer_but_slower_film_list</code>
     */
    public static final NicerButSlowerFilmList NICER_BUT_SLOWER_FILM_LIST = new NicerButSlowerFilmList();
    private static final long serialVersionUID = -1967285200;
    /**
     * The column <code>sakila.nicer_but_slower_film_list.FID</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, UShort> FID = createField("FID", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED)), this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.title</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.description</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.category</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR(25).nullable(false), this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.price</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL(4, 2).defaultValue(org.jooq.impl.DSL.inline("4.99", org.jooq.impl.SQLDataType.DECIMAL)), this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.length</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, UShort> LENGTH = createField("length", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.rating</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, NicerButSlowerFilmListRating> RATING = createField("rating", org.jooq.impl.SQLDataType.VARCHAR(5).defaultValue(org.jooq.impl.DSL.inline("G", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(jooq.sakila.enums.NicerButSlowerFilmListRating.class), this, "");
    /**
     * The column <code>sakila.nicer_but_slower_film_list.actors</code>.
     */
    public final TableField<NicerButSlowerFilmListRecord, String> ACTORS = createField("actors", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sakila.nicer_but_slower_film_list</code> table reference
     */
    public NicerButSlowerFilmList() {
        this(DSL.name("nicer_but_slower_film_list"), null);
    }

    /**
     * Create an aliased <code>sakila.nicer_but_slower_film_list</code> table reference
     */
    public NicerButSlowerFilmList(String alias) {
        this(DSL.name(alias), NICER_BUT_SLOWER_FILM_LIST);
    }

    /**
     * Create an aliased <code>sakila.nicer_but_slower_film_list</code> table reference
     */
    public NicerButSlowerFilmList(Name alias) {
        this(alias, NICER_BUT_SLOWER_FILM_LIST);
    }

    private NicerButSlowerFilmList(Name alias, Table<NicerButSlowerFilmListRecord> aliased) {
        this(alias, aliased, null);
    }

    private NicerButSlowerFilmList(Name alias, Table<NicerButSlowerFilmListRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> NicerButSlowerFilmList(Table<O> child, ForeignKey<O, NicerButSlowerFilmListRecord> key) {
        super(child, key, NICER_BUT_SLOWER_FILM_LIST);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NicerButSlowerFilmListRecord> getRecordType() {
        return NicerButSlowerFilmListRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sakila.SAKILA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NicerButSlowerFilmList as(String alias) {
        return new NicerButSlowerFilmList(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NicerButSlowerFilmList as(Name alias) {
        return new NicerButSlowerFilmList(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NicerButSlowerFilmList rename(String name) {
        return new NicerButSlowerFilmList(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NicerButSlowerFilmList rename(Name name) {
        return new NicerButSlowerFilmList(name, null);
    }
}
